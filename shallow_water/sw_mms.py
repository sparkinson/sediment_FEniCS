# This file was *autogenerated* from the file 1D_nr_weakBC_deposit_mms.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2p3 = RealNumber('2.3'); _sage_const_2 = Integer(2); _sage_const_1p0 = RealNumber('1.0'); _sage_const_1p2 = RealNumber('1.2'); _sage_const_1p4 = RealNumber('1.4'); _sage_const_0p0 = RealNumber('0.0'); _sage_const_0p5 = RealNumber('0.5')
def function(phi_0, phi_x, f_sin_x, f_cos_x, alpha_x, x = x):
    f_0 = phi_0 
    f_x = phi_x*(f_sin_x*sin(alpha_x*x) + f_cos_x*cos(alpha_x*x)) 
    f = f_0 + f_x
    return f

Fr = _sage_const_1p0 
h = function(_sage_const_1p0 , _sage_const_1p0 , _sage_const_1p0 , _sage_const_0p0 , _sage_const_2p3 )
h_n = function(_sage_const_1p0 , _sage_const_1p0 , _sage_const_1p0 , _sage_const_0p0 , _sage_const_2p3 , pi)
phi = function(_sage_const_0p5 , _sage_const_0p5 , _sage_const_0p0 , _sage_const_1p0 , _sage_const_1p4 )
phi_n = function(_sage_const_0p5 , _sage_const_0p5 , _sage_const_0p0 , _sage_const_1p0 , _sage_const_1p4 , pi)
q = function(Fr*phi_n**_sage_const_0p5 *h_n, _sage_const_1p2 , _sage_const_1p0 , _sage_const_0p0 , _sage_const_1p0 )

x_N_dot = Fr*phi_n**_sage_const_0p5 

S_h = x*x_N_dot*diff(h,x) - diff(q,x)
S_q = x*x_N_dot*diff(q,x) - diff(q**_sage_const_2 /h + _sage_const_0p5 *(phi*h), x)
S_phi = x*x_N_dot*diff(phi, x) - diff(q*phi/h, x)

print "def h():"
print "    return '", str(h.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
print "def phi():"
print "    return '", str(phi.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
print "def q():"
print "    return '", str(q.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
print "def x_N_dot():"
print "    return '", str(x_N_dot.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
print "def S_h():"
print "    return '", str(S_h.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
print "def S_q():"
print "    return '", str(S_q.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
print "def S_phi():"
print "    return '", str(S_phi.simplify()).replace("000000000000", "").replace("x", "x[0]").replace("y", "x[1]"), "'"
